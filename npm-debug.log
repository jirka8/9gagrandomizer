0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'contextify' ]
2 info using npm@1.1.63
3 info using node@v0.9.3-pre
4 verbose read json /var/www/nodejs/9gag/package.json
5 warn package.json 9gag-random@0.0.1 No README.md file found!
6 verbose read json /var/www/nodejs/9gag/node_modules/express/package.json
7 verbose read json /var/www/nodejs/9gag/node_modules/jade/package.json
8 verbose read json /var/www/nodejs/9gag/node_modules/jsdom/package.json
9 verbose from cache /var/www/nodejs/9gag/package.json
10 verbose readDependencies using package.json deps
11 verbose cache add [ 'contextify', null ]
12 silly cache add name=undefined spec="contextify" args=["contextify",null]
13 verbose parsed url { protocol: null,
13 verbose parsed url   slashes: null,
13 verbose parsed url   auth: null,
13 verbose parsed url   host: null,
13 verbose parsed url   port: null,
13 verbose parsed url   hostname: null,
13 verbose parsed url   hash: null,
13 verbose parsed url   search: null,
13 verbose parsed url   query: null,
13 verbose parsed url   pathname: 'contextify',
13 verbose parsed url   path: 'contextify',
13 verbose parsed url   href: 'contextify' }
14 silly lockFile e90e8b6a-contextify contextify
15 verbose lock contextify /home/jirka8/.npm/e90e8b6a-contextify.lock
16 silly lockFile e90e8b6a-contextify contextify
17 verbose addNamed [ 'contextify', '' ]
18 verbose addNamed [ null, '' ]
19 silly lockFile 902bbeb2-contextify contextify@
20 verbose lock contextify@ /home/jirka8/.npm/902bbeb2-contextify.lock
21 silly addNameRange { name: 'contextify', range: '', hasData: false }
22 verbose url raw contextify
23 verbose url resolving [ 'https://registry.npmjs.org/', './contextify' ]
24 verbose url resolved https://registry.npmjs.org/contextify
25 info trying registry request attempt 1 at 20:47:45
26 verbose etag "QOE79Z9VM2IJW4KQC2YL8NML"
27 http GET https://registry.npmjs.org/contextify
28 http 304 https://registry.npmjs.org/contextify
29 silly registry.get cb [ 304,
29 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
29 silly registry.get     etag: '"QOE79Z9VM2IJW4KQC2YL8NML"',
29 silly registry.get     date: 'Mon, 17 Dec 2012 19:46:49 GMT',
29 silly registry.get     'content-length': '0' } ]
30 verbose etag contextify from cache
31 silly addNameRange number 2 { name: 'contextify', range: '', hasData: true }
32 silly addNameRange versions [ 'contextify',
32 silly addNameRange   [ '0.0.2',
32 silly addNameRange     '0.0.3',
32 silly addNameRange     '0.0.4',
32 silly addNameRange     '0.0.5',
32 silly addNameRange     '0.0.6',
32 silly addNameRange     '0.0.7',
32 silly addNameRange     '0.1.0',
32 silly addNameRange     '0.1.1',
32 silly addNameRange     '0.1.2',
32 silly addNameRange     '0.1.3' ] ]
33 verbose addNamed [ 'contextify', '0.1.3' ]
34 verbose addNamed [ '0.1.3', '0.1.3' ]
35 silly lockFile 7770d4b3-contextify-0-1-3 contextify@0.1.3
36 verbose lock contextify@0.1.3 /home/jirka8/.npm/7770d4b3-contextify-0-1-3.lock
37 verbose read json /home/jirka8/.npm/contextify/0.1.3/package/package.json
38 silly lockFile 7770d4b3-contextify-0-1-3 contextify@0.1.3
39 silly lockFile 902bbeb2-contextify contextify@
40 silly resolved [ { name: 'contextify',
40 silly resolved     version: '0.1.3',
40 silly resolved     description: 'Turn an object into a persistent execution context.',
40 silly resolved     author: { name: 'Brian McDaniel', email: 'brianmcd05@gmail.com' },
40 silly resolved     contributors: [ [Object] ],
40 silly resolved     keywords: [ 'context', 'vm' ],
40 silly resolved     repository:
40 silly resolved      { type: 'git',
40 silly resolved        url: 'https://github.com/brianmcd/contextify.git' },
40 silly resolved     main: './lib/contextify',
40 silly resolved     scripts: { test: 'nodeunit test/', install: 'node-gyp rebuild' },
40 silly resolved     engines: { node: '>=0.4.0' },
40 silly resolved     licenses: [ [Object] ],
40 silly resolved     dependencies: { bindings: '*' },
40 silly resolved     devDependencies: { nodeunit: '>=0.5.x' },
40 silly resolved     gypfile: true,
40 silly resolved     readme: '# Contextify\n\nTurn an object into a V8 execution context.  A contextified object acts as the global \'this\' when executing scripts in its context.  Contextify adds 3 methods to the contextified object: run(code, filename), getGlobal(), and dispose().  The main difference between Contextify and Node\'s vm methods is that Contextify allows asynchronous functions to continue executing in the Contextified object\'s context.  See vm vs. Contextify below for more discussion.\n\n## Examples\n```javascript\nvar Contextify = require(\'contextify\');\nvar sandbox = { console : console, prop1 : \'prop1\'};\nContextify(sandbox);\nsandbox.run(\'console.log(prop1);\');\nsandbox.dispose(); // free the resources allocated for the context.\n```\n\n```javascript\nvar sandbox = Contextify(); // returns an empty contextified object.\nsandbox.run(\'var x = 3;\');\nconsole.log(sandbox.x); // prints 3\nsandbox.dispose();\n```\n\n```javascript\nvar sandbox = Contextify({setTimeout : setTimeout});\nsandbox.run("setTimeout(function () { x = 3; }, 5);");\nconsole.log(sandbox.x); // prints undefined\nsetTimeout(function () {\n    console.log(sandbox.x); // prints 3\n    sandbox.dispose();\n}, 10);\n```\n## Details\n\n**Contextify([sandbox])**\n\n    sandbox - The object to contextify, which will be modified as described below\n              If no sandbox is specified, an empty object will be allocated and used instead.\n\n    Returns the contextified object.  It doesn\'t make a copy, so if you already have a reference\n    to the sandbox, you don\'t need to catch the return value.\n\nA Contextified object has 2 methods added to it:\n\n**run(code, [filename])**\n\n    code - string containing JavaScript to execute\n    filename  - an optional filename for debugging.\n\n    Runs the code in the Contextified object\'s context.\n\n**getGlobal()**\n\nReturns the actual global object for the V8 context.  The global object is initialized with interceptors (discussed below) which forward accesses on it to the contextified object.  This means the contextified object acts like the global object in most cases.  Sometimes, though, you need to make a reference to the actual global object.\n\nFor example:\n\n```javascript\nvar window = Contextify({console : console});\nwindow.window = window;\nwindow.run("console.log(window === this);");\n// prints false.\n```\n\n```javascript\nvar window = Contextify({console : console});\nwindow.window = window.getGlobal();\nwindow.run("console.log(window === this);");\n// prints true\n```\n\nThe global object returned by getGlobal() can be treated like the contextified sandbox object, except that defining getters/setters will not work on it.  Define getters and setters on the actual sandbox object instead.\n\n**dispose()**\n\nFrees the memory allocated for the underlying V8 context.  If you don\'t call this when you\'re done, the V8 context memory will leak, as will the sandbox memory, since the context\'s global stores a strong reference to the sandbox object.  You can still use your sandbox object after calling dispose(), but it\'s unsafe to use a global previously returned from getGlobal().  run, getGlobal, and dispose will be removed from the sandbox object.\n\n## Install\n\n    npm install contextify\n\n## require(\'vm\') vs. Contextify\n\nNode\'s vm functions (runInContext etc) work by copying the values from the sandbox object onto a context\'s global object, executing the passed in script, then copying the results back.  This means that scripts that create asynchronous functions (using mechanisms like setTimeout) won\'t have see the results of executing those functions, since the copying in/out only occurs during an explicit call to runInContext and friends.  \n\nContextify creates a V8 context, and uses interceptors (see: http://code.google.com/apis/v8/embed.html#interceptors) to forward global object accesses to the sandbox object.  This means there is no copying in or out, so asynchronous functions have the expected effect on the sandbox object.  \n\n## Tests\n\nTesting is done with nodeunit.  Run the tests with\n\n    nodeunit test/\n\nOutput: \n\n    OK: 92 assertions (27ms)\n\n\n## Building\n\n    node-waf configure build\n\n## Acknowledgments\n\nInspiration taken from Assaf\'s Zombie.js context solution: https://github.com/assaf/zombie\n',
40 silly resolved     _id: 'contextify@0.1.3',
40 silly resolved     _from: 'contextify' } ]
41 info install contextify@0.1.3 into /var/www/nodejs/9gag
42 info installOne contextify@0.1.3
43 verbose from cache /home/jirka8/.npm/contextify/0.1.3/package/package.json
44 info /var/www/nodejs/9gag/node_modules/contextify unbuild
45 verbose read json /var/www/nodejs/9gag/node_modules/contextify/package.json
46 verbose tar unpack /home/jirka8/.npm/contextify/0.1.3/package.tgz
47 silly lockFile 5b83ff7c-ejs-9gag-node-modules-contextify /var/www/nodejs/9gag/node_modules/contextify
48 verbose lock /var/www/nodejs/9gag/node_modules/contextify /home/jirka8/.npm/5b83ff7c-ejs-9gag-node-modules-contextify.lock
49 silly gunzTarPerm modes [ '755', '644' ]
50 silly gunzTarPerm extractEntry package.json
51 silly gunzTarPerm extractEntry .npmignore
52 silly gunzTarPerm extractEntry README.md
53 silly gunzTarPerm extractEntry LICENSE.txt
54 silly gunzTarPerm extractEntry binding.gyp
55 silly gunzTarPerm extractEntry changelog
56 silly gunzTarPerm extractEntry lib/contextify.js
57 silly gunzTarPerm extractEntry src/contextify.cc
58 silly gunzTarPerm extractEntry test/contextify.js
59 silly gunzTarPerm extractEntry wscript
60 verbose read json /var/www/nodejs/9gag/node_modules/contextify/package.json
61 silly lockFile 5b83ff7c-ejs-9gag-node-modules-contextify /var/www/nodejs/9gag/node_modules/contextify
62 info preinstall contextify@0.1.3
63 verbose from cache /var/www/nodejs/9gag/node_modules/contextify/package.json
64 verbose readDependencies using package.json deps
65 verbose from cache /var/www/nodejs/9gag/node_modules/contextify/package.json
66 verbose readDependencies using package.json deps
67 verbose cache add [ 'bindings@*', null ]
68 silly cache add name=undefined spec="bindings@*" args=["bindings@*",null]
69 verbose parsed url { protocol: null,
69 verbose parsed url   slashes: null,
69 verbose parsed url   auth: null,
69 verbose parsed url   host: null,
69 verbose parsed url   port: null,
69 verbose parsed url   hostname: null,
69 verbose parsed url   hash: null,
69 verbose parsed url   search: null,
69 verbose parsed url   query: null,
69 verbose parsed url   pathname: 'bindings@*',
69 verbose parsed url   path: 'bindings@*',
69 verbose parsed url   href: 'bindings@*' }
70 silly cache add name="bindings" spec="*" args=["bindings","*"]
71 verbose parsed url { protocol: null,
71 verbose parsed url   slashes: null,
71 verbose parsed url   auth: null,
71 verbose parsed url   host: null,
71 verbose parsed url   port: null,
71 verbose parsed url   hostname: null,
71 verbose parsed url   hash: null,
71 verbose parsed url   search: null,
71 verbose parsed url   query: null,
71 verbose parsed url   pathname: '*',
71 verbose parsed url   path: '*',
71 verbose parsed url   href: '*' }
72 verbose addNamed [ 'bindings', '*' ]
73 verbose addNamed [ null, '' ]
74 silly lockFile a3858fc2-bindings bindings@*
75 verbose lock bindings@* /home/jirka8/.npm/a3858fc2-bindings.lock
76 silly addNameRange { name: 'bindings', range: '', hasData: false }
77 verbose url raw bindings
78 verbose url resolving [ 'https://registry.npmjs.org/', './bindings' ]
79 verbose url resolved https://registry.npmjs.org/bindings
80 info trying registry request attempt 1 at 20:47:46
81 verbose etag "64PA4SD751I7ZJ5D8J6WAIMVP"
82 http GET https://registry.npmjs.org/bindings
83 http 304 https://registry.npmjs.org/bindings
84 silly registry.get cb [ 304,
84 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
84 silly registry.get     etag: '"64PA4SD751I7ZJ5D8J6WAIMVP"',
84 silly registry.get     date: 'Mon, 17 Dec 2012 19:46:50 GMT',
84 silly registry.get     'content-length': '0' } ]
85 verbose etag bindings from cache
86 silly addNameRange number 2 { name: 'bindings', range: '', hasData: true }
87 silly addNameRange versions [ 'bindings',
87 silly addNameRange   [ '0.0.1',
87 silly addNameRange     '0.1.0',
87 silly addNameRange     '0.1.1',
87 silly addNameRange     '0.2.0',
87 silly addNameRange     '0.2.1',
87 silly addNameRange     '0.2.2',
87 silly addNameRange     '0.2.3',
87 silly addNameRange     '0.2.4',
87 silly addNameRange     '0.3.0',
87 silly addNameRange     '0.4.0',
87 silly addNameRange     '1.0.0' ] ]
88 verbose addNamed [ 'bindings', '1.0.0' ]
89 verbose addNamed [ '1.0.0', '1.0.0' ]
90 silly lockFile f01e5454-bindings-1-0-0 bindings@1.0.0
91 verbose lock bindings@1.0.0 /home/jirka8/.npm/f01e5454-bindings-1-0-0.lock
92 verbose read json /home/jirka8/.npm/bindings/1.0.0/package/package.json
93 silly lockFile f01e5454-bindings-1-0-0 bindings@1.0.0
94 silly lockFile a3858fc2-bindings bindings@*
95 silly resolved [ { name: 'bindings',
95 silly resolved     description: 'Helper module for loading your native module\'s .node file',
95 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf', 'c', 'c++' ],
95 silly resolved     version: '1.0.0',
95 silly resolved     author:
95 silly resolved      { name: 'Nathan Rajlich',
95 silly resolved        email: 'nathan@tootallnate.net',
95 silly resolved        url: 'http://tootallnate.net' },
95 silly resolved     repository:
95 silly resolved      { type: 'git',
95 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
95 silly resolved     main: './bindings.js',
95 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s .node file\n\nThis is a helper module for authors of Node.js native addon modules.\nIt is basically the "swiss army knife" of `require()`ing your native module\'s\n`.node` file.\n\nThroughout the course of Node\'s native addon history, addons have ended up being\ncompiled in a variety of different places, depending on which build tool and which\nversion of node was used. To make matters worse, now the _gyp_ build tool can\nproduce either a _Release_ or _Debug_ build, each being built into different\nlocations.\n\nThis module checks _all_ the possible locations that a native addon would be built\nat, and returns the first one that loads successfully.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\nOr add it to the `"dependencies"` section of your _package.json_ file.\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')(\'binding.node\')\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\n\nNice Error Output\n-----------------\n\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\na nice error message telling you exactly what was tried. You can also check the\n`err.tries` Array property.\n\n```\nError: Could not load the bindings file. Tried:\n → /Users/nrajlich/ref/build/binding.node\n → /Users/nrajlich/ref/build/Debug/binding.node\n → /Users/nrajlich/ref/build/Release/binding.node\n → /Users/nrajlich/ref/out/Debug/binding.node\n → /Users/nrajlich/ref/Debug/binding.node\n → /Users/nrajlich/ref/out/Release/binding.node\n → /Users/nrajlich/ref/Release/binding.node\n → /Users/nrajlich/ref/build/default/binding.node\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    ...\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
95 silly resolved     _id: 'bindings@1.0.0',
95 silly resolved     _from: 'bindings@*' } ]
96 info install bindings@1.0.0 into /var/www/nodejs/9gag/node_modules/contextify
97 info installOne bindings@1.0.0
98 verbose from cache /home/jirka8/.npm/bindings/1.0.0/package/package.json
99 info /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings unbuild
100 verbose read json /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings/package.json
101 verbose tar unpack /home/jirka8/.npm/bindings/1.0.0/package.tgz
102 silly lockFile a79c901b-contextify-node-modules-bindings /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings
103 verbose lock /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings /home/jirka8/.npm/a79c901b-contextify-node-modules-bindings.lock
104 silly gunzTarPerm modes [ '755', '644' ]
105 silly gunzTarPerm extractEntry package.json
106 silly gunzTarPerm extractEntry README.md
107 silly gunzTarPerm extractEntry bindings.js
108 verbose read json /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings/package.json
109 silly lockFile a79c901b-contextify-node-modules-bindings /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings
110 info preinstall bindings@1.0.0
111 verbose from cache /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings/package.json
112 verbose readDependencies using package.json deps
113 verbose from cache /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings/package.json
114 verbose readDependencies using package.json deps
115 silly resolved []
116 verbose about to build /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings
117 info build /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings
118 verbose from cache /var/www/nodejs/9gag/node_modules/contextify/node_modules/bindings/package.json
119 verbose linkStuff [ false,
119 verbose linkStuff   false,
119 verbose linkStuff   false,
119 verbose linkStuff   '/var/www/nodejs/9gag/node_modules/contextify/node_modules' ]
120 info linkStuff bindings@1.0.0
121 verbose linkBins bindings@1.0.0
122 verbose linkMans bindings@1.0.0
123 verbose rebuildBundles bindings@1.0.0
124 info install bindings@1.0.0
125 info postinstall bindings@1.0.0
126 verbose about to build /var/www/nodejs/9gag/node_modules/contextify
127 info build /var/www/nodejs/9gag/node_modules/contextify
128 verbose from cache /var/www/nodejs/9gag/node_modules/contextify/package.json
129 verbose linkStuff [ false, false, false, '/var/www/nodejs/9gag/node_modules' ]
130 info linkStuff contextify@0.1.3
131 verbose linkBins contextify@0.1.3
132 verbose linkMans contextify@0.1.3
133 verbose rebuildBundles contextify@0.1.3
134 verbose rebuildBundles [ 'bindings' ]
135 info install contextify@0.1.3
136 verbose unsafe-perm in lifecycle false
137 verbose set uid from=0 to=1000
138 silly exec sh "-c" "node-gyp rebuild"
139 silly sh,-c,node-gyp rebuild,/var/www/nodejs/9gag/node_modules/contextify spawning
140 info contextify@0.1.3 Failed to exec install script
141 info /var/www/nodejs/9gag/node_modules/contextify unbuild
142 verbose from cache /var/www/nodejs/9gag/node_modules/contextify/package.json
143 info preuninstall contextify@0.1.3
144 info uninstall contextify@0.1.3
145 verbose true,/var/www/nodejs/9gag/node_modules,/var/www/nodejs/9gag/node_modules unbuild contextify@0.1.3
146 info postuninstall contextify@0.1.3
147 error contextify@0.1.3 install: `node-gyp rebuild`
147 error `sh "-c" "node-gyp rebuild"` failed with 1
148 error Failed at the contextify@0.1.3 install script.
148 error This is most likely a problem with the contextify package,
148 error not with npm itself.
148 error Tell the author that this fails on your system:
148 error     node-gyp rebuild
148 error You can get their info via:
148 error     npm owner ls contextify
148 error There is likely additional logging output above.
149 error System Linux 3.2.0-34-generic
150 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "contextify"
151 error cwd /var/www/nodejs/9gag
152 error node -v v0.9.3-pre
153 error npm -v 1.1.63
154 error code ELIFECYCLE
155 verbose exit [ 1, true ]
